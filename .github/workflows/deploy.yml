name: CICD

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  # Database
  DB_DB: demodb
  DB_USER: sa
  DB_PASSWORD: P@ssword1
  # Java
  JAVA_VERSION: 11
  # Pipeline
  REPO_NAME: luuductrung1234/micro-smart-eshop
  PIPELINE_COMPOSE_FILE: pipeline/docker-compose.yml
  DOCKER_IMAGE: luuductrung1234/micro-smart-eshop
  # DockerHub
  DOCKER_HUB_USERNAME: luuductrung1234
  DOCKER_HUB_REPO_URL: https://hub.docker.com/repository/docker/luuductrung1234/micro-smart-eshop
  # AWS & Elastic Bean Stalk
  AWS_REGION: ap-southeast-1
  EB_ENVIRONMENT_NAME: Microsmartdemo-env
  EB_APPLICATION_NAME: micro-smart-demo
  EB_DEPLOYMENT_PACKAGE: pipeline/docker-compose.yml
  EB_DEPLOYED_URL: http://microsmartdemo-env.eba-nudppsiw.ap-southeast-1.elasticbeanstalk.com/

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mysql:8.0.29
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_DB }}
          MYSQL_USER: ${{ env.DB_USER }}
          MYSQL_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    outputs:
      build-number: ${{ steps.build-number.outputs.BUILD_NUMBER }}
      is-code-changed: ${{ steps.verify-changed-code.outputs.any_changed }}
    steps:
      - name: Notify with Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'CICD ongoing... :eyes:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Verify Code Changed
        id: verify-changed-code
        uses: tj-actions/changed-files@v23.1
        with:
          files: |
            **/pom.xml
            src
            src/**
            src/**/*.sql
            src/**/*.yml
            src/**/*.java
            src/**/*.js
            src/**/*.html
            src/**/*.css
            src/**/*.json

      - name: List All Changed Files
        if: steps.verify-changed-code.outputs.any_changed == 'true'
        run: |
          for file in ${{ steps.verify-changed-code.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Maven Clean Package and Push to Dockerhub
        if: steps.verify-changed-code.outputs.any_changed == 'true'
        run: |
          ./mvnw --no-transfer-progress clean package \
            -P build-frontend \
            -P push-to-registry \
              -Dimage.tag=${{steps.build-number.outputs.BUILD_NUMBER}}

      - name: Notify with Slack
        uses: 8398a7/action-slack@v3
        if: steps.verify-changed-code.outputs.any_changed == 'true'
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':white_check_mark: pushed ${{env.DOCKER_IMAGE}}:${{steps.build-number.outputs.BUILD_NUMBER}} to docker hub... ${{env.DOCKER_HUB_REPO_URL}}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v3

      - name: Update app version docker-compose.yaml
        if: ${{ needs.build.outputs.is-code-changed == 'true' }}
        run: |
          BUILD_NUMBER=${{needs.build.outputs.build-number}}
          echo -e "=========================================="
          echo -e "Before Changes"
          echo -e "=========================================="
          echo -e "Current ${{env.PIPELINE_COMPOSE_FILE}}\n$(cat ${{env.PIPELINE_COMPOSE_FILE}})"
          sed -i -E 's_(${{env.DOCKER_IMAGE}}:)([^"]*)_\1'${BUILD_NUMBER}'_' ${{env.PIPELINE_COMPOSE_FILE}}
          echo -e ""
          echo -e "=========================================="
          echo -e "After Changes"
          echo -e "=========================================="
          echo -e ""
          echo -e "Current ${{env.PIPELINE_COMPOSE_FILE}}\n$(cat ${{env.PIPELINE_COMPOSE_FILE}})"

      - name: Replace secrets docker-compose.yaml
        run: |
          BUILD_NUMBER=${{needs.build.outputs.build-number}}
          echo -e "=========================================="
          echo -e "Before Changes"
          echo -e "=========================================="
          echo -e "Current ${{env.PIPELINE_COMPOSE_FILE}}\n$(cat ${{env.PIPELINE_COMPOSE_FILE}})"
          sed -i -E 's#_demo-db-url_#${{secrets.APP_DEMO_DB_URL}}#g' ${{env.PIPELINE_COMPOSE_FILE}}
          sed -i -E 's#_demo-db-username_#${{secrets.APP_DEMO_DB_USERNAME}}#g' ${{env.PIPELINE_COMPOSE_FILE}}
          sed -i -E 's#_demo-db-password_#${{secrets.APP_DEMO_DB_PASSWORD}}#g' ${{env.PIPELINE_COMPOSE_FILE}}
          echo -e ""
          echo -e "=========================================="
          echo -e "After Changes"
          echo -e "=========================================="
          echo -e ""
          echo -e "Current ${{env.PIPELINE_COMPOSE_FILE}}\n$(cat ${{env.PIPELINE_COMPOSE_FILE}})"

      - name: Notify with Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':elasticbeanstalk: :aws: Deployment started... :grimacing: :crossed_fingers:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ needs.build.outputs.build-number }}
          version_description: Version ${{ needs.build.outputs.build-number }} deployed via github actions ${{ github.sha }}
          wait_for_deployment: 60

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':cry: :x: something went wrong! please check!'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

      - name: Notify with Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':tada: :arrow_right: ${{env.EB_DEPLOYED_URL}}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success()